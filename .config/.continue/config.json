{
  "models": [
    {
      "title": "Claude 3.7 with Thinking",
      "provider": "anthropic",
      "model": "claude-3-7-sonnet",
      "apiKey": "",
      "contextLength": 250000,
      "requestOptions": {
        "extraBodyProperties": {
          "system": "When responding, first put your thinking in a JSON block with the format {\"reasoning_text\": \"your thinking here\"}. Then provide your regular answer.",
          "thinking": {
            "type": "enabled",
            "budget_tokens": 8000
          }
        }
      },
      "systemMessage": "You are an expert who thinks carefully before providing solutions.",
      "capabilities": {
        "tools": true,
        "uploadImage": true
      },
      "completionOptions": {
        "temperature": 1,
        "maxTokens": 16000
      }
    },
    {
      "title": "Claude 3.5 Sonnet",
      "provider": "anthropic",
      "model": "claude-3-5-sonnet-20240620",
      "apiKey": ""
    },
    {
      "title": "gpt4o-mini",
      "provider": "openai",
      "model": "gpt-4o-mini",
      "apiKey": ""
    }
  ],
  "customCommands": [
    {
      "name": "test",
      "prompt": "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
      "description": "Write unit tests for highlighted code"
    }
  ],
  // "tabAutocompleteModel": {
  //   "title": "Starcoder2 3b",
  //   "provider": "ollama",
  //   "model": "starcoder2:3b"
  // },
  "tabAutocompleteModel": {
    "title": "Claude",
    "provider": "anthropic",
    "model": "claude-3-5-sonnet-20240620",
    "apiKey": ""
  },
  "embeddingsProvider": {
    "provider": "openai",
    "model": "voyage-code-2",
    "apiBase": "https://api.voyageai.com/v1/",
    "apiKey": ""
  },
  "reranker": {
    "name": "voyage",
    "params": {
      "apiKey": ""
    }
  },
  "contextProviders": [
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {}
    }
  ],
  "slashCommands": [
    {
      "name": "edit",
      "description": "Edit selected code"
    },
    {
      "name": "comment",
      "description": "Write comments for the selected code"
    },
    {
      "name": "share",
      "description": "Export the current chat session to markdown"
    },
    {
      "name": "cmd",
      "description": "Generate a shell command"
    },
    {
      "name": "commit",
      "description": "Generate a git commit message"
    }
  ]
}
